{"version":3,"file":"Dataset.min.js","sources":["../../src/i18n/en.js","../../src/helpers/index.js","../../node_modules/vue-runtime-helpers/dist/normalize-component.mjs","../../src/Dataset.vue"],"sourcesContent":["export default {\r\n  show: 'Show',\r\n  entries: 'entries',\r\n  previous: 'Previous',\r\n  next: 'Next',\r\n  showing: 'Showing',\r\n  showingTo: 'to',\r\n  showingOf: 'of',\r\n  showingEntries: 'entries'\r\n};\r\n","const MORE_PAGES = '...';\r\n\r\nfunction debounce (func, wait, immediate) {\r\n  let timeout;\r\n  return function () {\r\n    const context = this;\r\n    const args = arguments;\r\n    clearTimeout(timeout);\r\n    if (immediate && !timeout) {\r\n      func.apply(context, args);\r\n    }\r\n    timeout = setTimeout(function () {\r\n      timeout = null;\r\n      if (!immediate) {\r\n        func.apply(context, args);\r\n      }\r\n    }, wait);\r\n  };\r\n};\r\n\r\n// https://jsperf.com/object-empty-ch/1\r\nfunction isEmptyObject (obj) {\r\n  for (const key in obj) {\r\n    return false;\r\n  }\r\n  return true;\r\n}\r\n\r\nfunction createPagingRange (nrOfPages, currentPage) {\r\n  const delta = 2;\r\n  const range = [];\r\n  const rangeWithDots = [];\r\n  let length;\r\n\r\n  range.push(1);\r\n\r\n  if (nrOfPages <= 1) {\r\n    return range;\r\n  }\r\n\r\n  for (let i = currentPage - delta; i <= currentPage + delta; i++) {\r\n    if (i < nrOfPages && i > 1) {\r\n      range.push(i);\r\n    }\r\n  }\r\n  range.push(nrOfPages);\r\n\r\n  for (let i = 0; i < range.length; i++) {\r\n    if (length) {\r\n      if (range[i] - length === 2) {\r\n        rangeWithDots.push(length + 1);\r\n      } else if (range[i] - length !== 1) {\r\n        rangeWithDots.push(MORE_PAGES);\r\n      }\r\n    }\r\n    rangeWithDots.push(range[i]);\r\n    length = range[i];\r\n  }\r\n  return rangeWithDots;\r\n}\r\n\r\nfunction fieldSorter (fields, dsSortAs = {}) {\r\n  const dir = [];\r\n  let i;\r\n  const length = fields.length;\r\n  fields = fields.map(function (o, i) {\r\n    if (o[0] === '-') {\r\n      dir[i] = -1;\r\n      o = o.substring(1);\r\n    } else {\r\n      dir[i] = 1;\r\n    }\r\n    return o;\r\n  });\r\n\r\n  return function (a, b) {\r\n    for (i = 0; i < length; i++) {\r\n      const o = fields[i];\r\n      const aVal = dsSortAs[o] ? dsSortAs[o](a.value[o]) : a.value[o];\r\n      const bVal = dsSortAs[o] ? dsSortAs[o](b.value[o]) : b.value[o];\r\n      if (aVal > bVal) {\r\n        return dir[i];\r\n      }\r\n      if (aVal < bVal) {\r\n        return -(dir[i]);\r\n      }\r\n    }\r\n    return 0;\r\n  };\r\n}\r\n\r\nfunction fieldFilter (items, filterFields) {\r\n  // Filter it by field\r\n  for (const filterKey in filterFields) {\r\n    // console.log(filterKey + ' -> ' + filterFields[filterKey]);\r\n    items = items.filter(function (item) {\r\n      const itemValue = item.value;\r\n      for (const itemKey in itemValue) {\r\n        if (itemKey === filterKey) {\r\n          if (typeof filterFields[filterKey] === 'function') {\r\n            return filterFields[filterKey](itemValue[itemKey]);\r\n          }\r\n          if (filterFields[filterKey] === '') {\r\n            return true;\r\n          }\r\n          if (itemValue[itemKey] === filterFields[filterKey]) {\r\n            return true;\r\n          }\r\n        }\r\n      }\r\n      return false;\r\n    });\r\n  }\r\n  return items;\r\n}\r\n\r\n// Search method that also takes into account transformations needed\r\nfunction findAny (dsSearchIn, dsSearchAs, obj, str) {\r\n  // Convert the search string to lower case\r\n  str = str.toLowerCase();\r\n  for (const key in obj) {\r\n    if (dsSearchIn.length === 0 || dsSearchIn.indexOf(key) !== -1) {\r\n      const value = String(obj[key]).toLowerCase();\r\n      for (const field in dsSearchAs) {\r\n        if (field === key) {\r\n          // Found key in dsSearchAs so we pass the value and the search string to a search function\r\n          // that returns true/false and we return that if true.\r\n          /* Check if dsSearchAs is a function (passed from the template) */\r\n          if (typeof dsSearchAs[field] === 'function') {\r\n            const res = dsSearchAs[field](value, str);\r\n            if (res === true) {\r\n              return res;\r\n            }\r\n          }\r\n        }\r\n      }\r\n      // If it doesn't return from above we perform a simple search\r\n      if (value.indexOf(str) >= 0) {\r\n        return true;\r\n      }\r\n    }\r\n  }\r\n  return false;\r\n}\r\n\r\nexport { MORE_PAGES, debounce, isEmptyObject, createPagingRange, fieldSorter, fieldFilter, findAny };\r\n","function normalizeComponent(template, style, script, scopeId, isFunctionalTemplate, moduleIdentifier /* server only */, shadowMode, createInjector, createInjectorSSR, createInjectorShadow) {\r\n    if (typeof shadowMode !== 'boolean') {\r\n        createInjectorSSR = createInjector;\r\n        createInjector = shadowMode;\r\n        shadowMode = false;\r\n    }\r\n    // Vue.extend constructor export interop.\r\n    const options = typeof script === 'function' ? script.options : script;\r\n    // render functions\r\n    if (template && template.render) {\r\n        options.render = template.render;\r\n        options.staticRenderFns = template.staticRenderFns;\r\n        options._compiled = true;\r\n        // functional template\r\n        if (isFunctionalTemplate) {\r\n            options.functional = true;\r\n        }\r\n    }\r\n    // scopedId\r\n    if (scopeId) {\r\n        options._scopeId = scopeId;\r\n    }\r\n    let hook;\r\n    if (moduleIdentifier) {\r\n        // server build\r\n        hook = function (context) {\r\n            // 2.3 injection\r\n            context =\r\n                context || // cached call\r\n                    (this.$vnode && this.$vnode.ssrContext) || // stateful\r\n                    (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext); // functional\r\n            // 2.2 with runInNewContext: true\r\n            if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\r\n                context = __VUE_SSR_CONTEXT__;\r\n            }\r\n            // inject component styles\r\n            if (style) {\r\n                style.call(this, createInjectorSSR(context));\r\n            }\r\n            // register component module identifier for async chunk inference\r\n            if (context && context._registeredComponents) {\r\n                context._registeredComponents.add(moduleIdentifier);\r\n            }\r\n        };\r\n        // used by ssr in case component is cached and beforeCreate\r\n        // never gets called\r\n        options._ssrRegister = hook;\r\n    }\r\n    else if (style) {\r\n        hook = shadowMode\r\n            ? function (context) {\r\n                style.call(this, createInjectorShadow(context, this.$root.$options.shadowRoot));\r\n            }\r\n            : function (context) {\r\n                style.call(this, createInjector(context));\r\n            };\r\n    }\r\n    if (hook) {\r\n        if (options.functional) {\r\n            // register for functional component in vue file\r\n            const originalRender = options.render;\r\n            options.render = function renderWithStyleInjection(h, context) {\r\n                hook.call(context);\r\n                return originalRender(h, context);\r\n            };\r\n        }\r\n        else {\r\n            // inject component registration as beforeCreate hook\r\n            const existing = options.beforeCreate;\r\n            options.beforeCreate = existing ? [].concat(existing, hook) : [hook];\r\n        }\r\n    }\r\n    return script;\r\n}\n\nexport default normalizeComponent;\n//# sourceMappingURL=normalize-component.mjs.map\n","<template>\r\n  <div>\r\n    <slot :ds=\"{ dsShowEntries, dsResultsNumber, dsPage, dsPagecount, dsFrom, dsTo, dsData, dsRows, dsPages }\"></slot>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport datasetI18n from './i18n/en.js';\r\nimport { isEmptyObject, createPagingRange, fieldSorter, fieldFilter, findAny } from './helpers';\r\n\r\nexport default {\r\n  provide () {\r\n    return {\r\n      search: this.search,\r\n      showEntries: this.showEntries,\r\n      setActive: this.setActive,\r\n      datasetI18n: this.datasetI18n,\r\n      dsData: this.dsData,\r\n      /* Setup reactive provides */\r\n      rdsRows: () => this.dsRows,\r\n      rdsPages: () => this.dsPages,\r\n      rdsResultsNumber: () => this.dsResultsNumber,\r\n      rdsPagecount: () => this.dsPagecount,\r\n      rdsFrom: () => this.dsFrom,\r\n      rdsTo: () => this.dsTo,\r\n      rdsPage: () => this.dsPage\r\n    };\r\n  },\r\n  props: {\r\n    dsData: {\r\n      type: Array,\r\n      default: () => []\r\n    },\r\n    dsFilterFields: {\r\n      type: Object,\r\n      default: () => ({})\r\n    },\r\n    dsSortby: {\r\n      type: Array,\r\n      default: () => []\r\n    },\r\n    dsSearchIn: {\r\n      type: Array,\r\n      default: () => []\r\n    },\r\n    dsSearchAs: {\r\n      type: Object,\r\n      default: () => ({})\r\n    },\r\n    dsSortAs: {\r\n      type: Object,\r\n      default: () => ({})\r\n    }\r\n  },\r\n  data: function () {\r\n    return {\r\n      dsPage: 1,\r\n      dsSearch: '',\r\n      dsShowEntries: 10,\r\n      datasetI18n: datasetI18n\r\n    };\r\n  },\r\n  computed: {\r\n    /*\r\n    The naive attempt would be to manipulate the original array directly.\r\n    This is problematic because it has to be filtered first, then sorted, then the from/to rows extracted.\r\n    In order to do that in that order, you would need to work on a copy.\r\n    But this is problematic as well since you'd loose the data-binding with the original array.\r\n\r\n    The trick is to work directly on the array indexes.\r\n    */\r\n    indexes: function () {\r\n      let result = [];\r\n      const dsData = this.dsData;\r\n      const dsSearch = this.dsSearch;\r\n      const dsSortby = this.dsSortby;\r\n      const dsFilterFields = this.dsFilterFields;\r\n      const dsSearchIn = this.dsSearchIn;\r\n      const dsSearchAs = this.dsSearchAs;\r\n      const dsSortAs = this.dsSortAs;\r\n\r\n      if (!dsSearch && !dsSortby.length && isEmptyObject(dsFilterFields)) {\r\n        // Just get the indexes\r\n        result = dsData.map(function (val, i) {\r\n          return i;\r\n        });\r\n      } else {\r\n        // Index it\r\n        result = dsData.map(function (val, i) {\r\n          return { index: i, value: val };\r\n        });\r\n\r\n        // Filter it by field\r\n        if (!isEmptyObject(dsFilterFields)) {\r\n          result = fieldFilter(result, dsFilterFields);\r\n        }\r\n\r\n        // Search it\r\n        if (dsSearch) {\r\n          result = result.filter(function (entry) {\r\n            return findAny(dsSearchIn, dsSearchAs, entry.value, dsSearch);\r\n          });\r\n        }\r\n\r\n        // Sort it\r\n        if (dsSortby.length) {\r\n          result.sort(fieldSorter(dsSortby, dsSortAs));\r\n        }\r\n\r\n        // We need indexes only\r\n        result = result.map(function (entry) {\r\n          return entry.index;\r\n        });\r\n      }\r\n      return result;\r\n    },\r\n    dsRows: function () {\r\n      // We should not modify another computed property from inside a computed property\r\n      // This should be moved into the dsTo computed if needed\r\n      /*\r\n      if (this.dsTo <= 0) {\r\n        this.dsTo = this.indexes.length;\r\n      }\r\n      */\r\n      // console.log(this.indexes);\r\n      return this.indexes.slice(this.dsFrom, this.dsTo);\r\n    },\r\n    dsPages: function () {\r\n      return createPagingRange(this.dsPagecount, this.dsPage);\r\n    },\r\n    dsResultsNumber: function () {\r\n      return this.indexes.length;\r\n    },\r\n    dsPagecount: function () {\r\n      return Math.ceil(this.dsResultsNumber / this.dsShowEntries);\r\n    },\r\n    dsFrom: function () {\r\n      return (this.dsPage - 1) * this.dsShowEntries;\r\n    },\r\n    dsTo: function () {\r\n      return this.dsPage * this.dsShowEntries;\r\n    }\r\n  },\r\n  watch: {\r\n    dsResultsNumber: {\r\n      handler: function (val, oldVal) {\r\n        // Reset active page when results change\r\n        this.setActive(1);\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    search (value) {\r\n      this.dsSearch = value;\r\n    },\r\n    showEntries (value) {\r\n      const pagesBeforeChange = this.dsPages;\r\n      this.dsShowEntries = value;\r\n      this.$nextTick(() => {\r\n        const pagesAfterChange = this.dsPages;\r\n        if (pagesAfterChange.length < pagesBeforeChange.length) {\r\n          this.setActive(pagesAfterChange[pagesAfterChange.length - 1]);\r\n        }\r\n      });\r\n    },\r\n    setActive (value) {\r\n      this.dsPage = value;\r\n    }\r\n  }\r\n};\r\n</script>\r\n"],"names":["show","entries","previous","next","showing","showingTo","showingOf","showingEntries","isEmptyObject","obj","const","key","normalizeComponent","template","style","script","scopeId","isFunctionalTemplate","moduleIdentifier","shadowMode","createInjector","createInjectorSSR","createInjectorShadow","options","hook","render","staticRenderFns","_compiled","functional","_scopeId","context","this","$vnode","ssrContext","parent","__VUE_SSR_CONTEXT__","call","_registeredComponents","add","_ssrRegister","$root","$options","shadowRoot","originalRender","h","existing","beforeCreate","concat","items","filterFields","filter","item","itemValue","value","itemKey","filterKey","dsSearchIn","dsSearchAs","str","toLowerCase","length","indexOf","String","field","res","fields","dsSortAs","i","dir","map","o","substring","a","b","aVal","bVal","nrOfPages","currentPage","range","rangeWithDots","push","let"],"mappings":"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"}