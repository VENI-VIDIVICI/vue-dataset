{"version":3,"file":"DatasetSearch.min.js","sources":["../../node_modules/vue-runtime-helpers/dist/normalize-component.mjs","../../src/DatasetSearch.vue","../../src/helpers/index.js"],"sourcesContent":["function normalizeComponent(template, style, script, scopeId, isFunctionalTemplate, moduleIdentifier /* server only */, shadowMode, createInjector, createInjectorSSR, createInjectorShadow) {\r\n    if (typeof shadowMode !== 'boolean') {\r\n        createInjectorSSR = createInjector;\r\n        createInjector = shadowMode;\r\n        shadowMode = false;\r\n    }\r\n    // Vue.extend constructor export interop.\r\n    const options = typeof script === 'function' ? script.options : script;\r\n    // render functions\r\n    if (template && template.render) {\r\n        options.render = template.render;\r\n        options.staticRenderFns = template.staticRenderFns;\r\n        options._compiled = true;\r\n        // functional template\r\n        if (isFunctionalTemplate) {\r\n            options.functional = true;\r\n        }\r\n    }\r\n    // scopedId\r\n    if (scopeId) {\r\n        options._scopeId = scopeId;\r\n    }\r\n    let hook;\r\n    if (moduleIdentifier) {\r\n        // server build\r\n        hook = function (context) {\r\n            // 2.3 injection\r\n            context =\r\n                context || // cached call\r\n                    (this.$vnode && this.$vnode.ssrContext) || // stateful\r\n                    (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext); // functional\r\n            // 2.2 with runInNewContext: true\r\n            if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\r\n                context = __VUE_SSR_CONTEXT__;\r\n            }\r\n            // inject component styles\r\n            if (style) {\r\n                style.call(this, createInjectorSSR(context));\r\n            }\r\n            // register component module identifier for async chunk inference\r\n            if (context && context._registeredComponents) {\r\n                context._registeredComponents.add(moduleIdentifier);\r\n            }\r\n        };\r\n        // used by ssr in case component is cached and beforeCreate\r\n        // never gets called\r\n        options._ssrRegister = hook;\r\n    }\r\n    else if (style) {\r\n        hook = shadowMode\r\n            ? function (context) {\r\n                style.call(this, createInjectorShadow(context, this.$root.$options.shadowRoot));\r\n            }\r\n            : function (context) {\r\n                style.call(this, createInjector(context));\r\n            };\r\n    }\r\n    if (hook) {\r\n        if (options.functional) {\r\n            // register for functional component in vue file\r\n            const originalRender = options.render;\r\n            options.render = function renderWithStyleInjection(h, context) {\r\n                hook.call(context);\r\n                return originalRender(h, context);\r\n            };\r\n        }\r\n        else {\r\n            // inject component registration as beforeCreate hook\r\n            const existing = options.beforeCreate;\r\n            options.beforeCreate = existing ? [].concat(existing, hook) : [hook];\r\n        }\r\n    }\r\n    return script;\r\n}\n\nexport default normalizeComponent;\n//# sourceMappingURL=normalize-component.mjs.map\n","<template>\r\n  <input type=\"text\" :placeholder=\"dsSearchPlaceholder\" class=\"form-control\" :value=\"dsSearch\" @input=\"input($event.target.value)\" />\r\n</template>\r\n\r\n<script>\r\nimport { debounce } from './helpers';\r\n\r\nexport default {\r\n  inject: ['search'],\r\n  props: {\r\n    dsSearchPlaceholder: {\r\n      type: String,\r\n      default: ''\r\n    },\r\n    wait: {\r\n      type: Number,\r\n      default: 0\r\n    }\r\n  },\r\n  data: function () {\r\n    return {\r\n      dsSearch: ''\r\n    };\r\n  },\r\n  mounted () {\r\n    this.input = debounce((value) => {\r\n      this.search(value);\r\n    }, this.wait);\r\n  }\r\n};\r\n</script>\r\n","const MORE_PAGES = '...';\r\n\r\nfunction debounce (func, wait, immediate) {\r\n  let timeout;\r\n  return function () {\r\n    const context = this;\r\n    const args = arguments;\r\n    clearTimeout(timeout);\r\n    if (immediate && !timeout) {\r\n      func.apply(context, args);\r\n    }\r\n    timeout = setTimeout(function () {\r\n      timeout = null;\r\n      if (!immediate) {\r\n        func.apply(context, args);\r\n      }\r\n    }, wait);\r\n  };\r\n};\r\n\r\n// https://jsperf.com/object-empty-ch/1\r\nfunction isEmptyObject (obj) {\r\n  for (const key in obj) {\r\n    return false;\r\n  }\r\n  return true;\r\n}\r\n\r\nfunction createPagingRange (nrOfPages, currentPage) {\r\n  const delta = 2;\r\n  const range = [];\r\n  const rangeWithDots = [];\r\n  let length;\r\n\r\n  range.push(1);\r\n\r\n  if (nrOfPages <= 1) {\r\n    return range;\r\n  }\r\n\r\n  for (let i = currentPage - delta; i <= currentPage + delta; i++) {\r\n    if (i < nrOfPages && i > 1) {\r\n      range.push(i);\r\n    }\r\n  }\r\n  range.push(nrOfPages);\r\n\r\n  for (let i = 0; i < range.length; i++) {\r\n    if (length) {\r\n      if (range[i] - length === 2) {\r\n        rangeWithDots.push(length + 1);\r\n      } else if (range[i] - length !== 1) {\r\n        rangeWithDots.push(MORE_PAGES);\r\n      }\r\n    }\r\n    rangeWithDots.push(range[i]);\r\n    length = range[i];\r\n  }\r\n  return rangeWithDots;\r\n}\r\n\r\nfunction fieldSorter (fields) {\r\n  const dir = [];\r\n  let i;\r\n  const length = fields.length;\r\n  fields = fields.map(function (o, i) {\r\n    if (o[0] === '-') {\r\n      dir[i] = -1;\r\n      o = o.substring(1);\r\n    } else {\r\n      dir[i] = 1;\r\n    }\r\n    return o;\r\n  });\r\n\r\n  return function (a, b) {\r\n    for (i = 0; i < length; i++) {\r\n      const o = fields[i];\r\n      if (a.value[o] > b.value[o]) {\r\n        return dir[i];\r\n      }\r\n      if (a.value[o] < b.value[o]) {\r\n        return -(dir[i]);\r\n      }\r\n    }\r\n    return 0;\r\n  };\r\n}\r\n\r\nfunction fieldFilter (items, filterFields) {\r\n  // Filter it by field\r\n  for (const filterKey in filterFields) {\r\n    // console.log(filterKey + ' -> ' + filterFields[filterKey]);\r\n    items = items.filter(function (item) {\r\n      const itemValue = item.value;\r\n      for (const itemKey in itemValue) {\r\n        if (itemKey === filterKey) {\r\n          if (typeof filterFields[filterKey] === 'function') {\r\n            return filterFields[filterKey](itemValue[itemKey]);\r\n          }\r\n          if (filterFields[filterKey] === '') {\r\n            return true;\r\n          }\r\n          if (itemValue[itemKey] === filterFields[filterKey]) {\r\n            return true;\r\n          }\r\n        }\r\n      }\r\n      return false;\r\n    });\r\n  }\r\n  return items;\r\n}\r\n\r\n// Search method that also takes into account transformations needed\r\nfunction findAny (dsSearchIn, dsSearchAs, obj, str) {\r\n  // Convert the search string to lower case\r\n  str = str.toLowerCase();\r\n  for (const key in obj) {\r\n    if (dsSearchIn.length === 0 || dsSearchIn.indexOf(key) !== -1) {\r\n      const value = String(obj[key]).toLowerCase();\r\n      for (const field in dsSearchAs) {\r\n        if (field === key) {\r\n          // Found key in dsSearchAs so we pass the value and the search string to a search function\r\n          // that returns true/false and we return that if true.\r\n          /* Check if dsSearchAs was passed as string from template, if so call appropriate function from the component */\r\n          if (typeof dsSearchAs[field] === 'string') {\r\n            const res = this[dsSearchAs[field]](value, str);\r\n            if (res === true) {\r\n              return res;\r\n            }\r\n            /* Check if dsSearchAs is a function (passed from the template) */\r\n          }\r\n          if (typeof dsSearchAs[field] === 'function') {\r\n            const res = dsSearchAs[field](value, str);\r\n            if (res === true) {\r\n              return res;\r\n            }\r\n          }\r\n        }\r\n      }\r\n      // If it doesn't return from above we perform a simple search\r\n      if (value.indexOf(str) >= 0) {\r\n        return true;\r\n      }\r\n    }\r\n  }\r\n  return false;\r\n}\r\n\r\nexport { MORE_PAGES, debounce, isEmptyObject, createPagingRange, fieldSorter, fieldFilter, findAny };\r\n"],"names":["normalizeComponent","template","style","script","scopeId","isFunctionalTemplate","moduleIdentifier","shadowMode","createInjector","createInjectorSSR","createInjectorShadow","const","hook","options","render","staticRenderFns","_compiled","functional","_scopeId","context","this","$vnode","ssrContext","parent","__VUE_SSR_CONTEXT__","call","_registeredComponents","add","_ssrRegister","$root","$options","shadowRoot","originalRender","h","existing","beforeCreate","concat","func","wait","immediate","timeout","args","arguments","clearTimeout","apply","setTimeout"],"mappings":"8OAAA,SAASA,EAAmBC,EAAUC,EAAOC,EAAQC,EAASC,EAAsBC,EAAoCC,EAAYC,EAAgBC,EAAmBC,GACzI,kBAAfH,IACPE,EAAoBD,EACpBA,EAAiBD,EACjBA,GAAa,GAGjBI,IAeIC,EAfEC,EAA4B,mBAAXV,EAAwBA,EAAOU,QAAUV,EAkDhE,GAhDIF,GAAYA,EAASa,SACrBD,EAAQC,OAASb,EAASa,OAC1BD,EAAQE,gBAAkBd,EAASc,gBACnCF,EAAQG,WAAY,EAEhBX,IACAQ,EAAQI,YAAa,IAIzBb,IACAS,EAAQK,SAAWd,GAGnBE,GAEAM,EAAO,SAAUO,IAEbA,EACIA,GACKC,KAAKC,QAAUD,KAAKC,OAAOC,YAC3BF,KAAKG,QAAUH,KAAKG,OAAOF,QAAUD,KAAKG,OAAOF,OAAOC,aAElB,oBAAxBE,sBACnBL,EAAUK,qBAGVtB,GACAA,EAAMuB,KAAKL,KAAMX,EAAkBU,IAGnCA,GAAWA,EAAQO,uBACnBP,EAAQO,sBAAsBC,IAAIrB,IAK1CO,EAAQe,aAAehB,GAElBV,IACLU,EAAOL,EACD,SAAUY,GACRjB,EAAMuB,KAAKL,KAAMV,EAAqBS,EAASC,KAAKS,MAAMC,SAASC,cAErE,SAAUZ,GACRjB,EAAMuB,KAAKL,KAAMZ,EAAeW,MAGxCP,EACA,GAAIC,EAAQI,WAAY,CAEpBN,IAAMqB,EAAiBnB,EAAQC,OAC/BD,EAAQC,OAAS,SAAkCmB,EAAGd,GAElD,OADAP,EAAKa,KAAKN,GACHa,EAAeC,EAAGd,QAG5B,CAEDR,IAAMuB,EAAWrB,EAAQsB,aACzBtB,EAAQsB,aAAeD,EAAW,GAAGE,OAAOF,EAAUtB,GAAQ,CAACA,GAGvE,OAAOT,ECtEXQ,uKCAmB0B,EAAMC,EAAMC,EACzBC,qBADaH,2BAAMC,YAEhB,WACL3B,IAAMQ,EAAUC,KACVqB,EAAOC,UACbC,aAAaH,GACTD,IAAcC,GAChBH,EAAKO,MAAMzB,EAASsB,GAEtBD,EAAUK,YAAW,WACnBL,EAAU,KACLD,GACHF,EAAKO,MAAMzB,EAASsB,KAErBH"}